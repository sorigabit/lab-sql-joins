USE sakila;

#List the number of films per category

SELECT category.name, COUNT(film.title) AS No_of_movies
FROM sakila.category
JOIN sakila.film_category
USING (category_id)
JOIN film
ON film.film_id = film_category.film_id
GROUP BY category.name;

#Retrieve the store ID, city, and country for each store.
SELECT store.store_id AS Store_id, city.city AS City, country.country AS Country
FROM sakila.store
JOIN sakila.address
USING (address_id)
JOIN sakila.city
ON address.city_id = city.city_id
JOIN sakila.country
ON city.country_id = country.country_id;

#Calculate the total revenue generated by each store in dollars.


SELECT SUM(sakila.payment.amount), sakila.store.store_id as STORE
FROM sakila.payment
JOIN sakila.staff
USING (staff_id)
JOIN sakila.store
ON sakila.staff.store_id = sakila.store.store_id
GROUP BY store.store_id;



#Determine the average running time of films for each category.

SELECT AVG(film.length) AS Average_length, category.name AS Category
FROM sakila.film
JOIN sakila.film_category
USING (film_id)
JOIN sakila.category
ON sakila.film_category.category_id = sakila.category.category_id
GROUP BY category.name;

#BONUS
#Identify the film categories with the longest average running time.

SELECT AVG(film.length) AS Average_length, category.name AS Category
FROM sakila.film
JOIN sakila.film_category
USING (film_id)
JOIN sakila.category
ON sakila.film_category.category_id = sakila.category.category_id
GROUP BY category.name
ORDER BY AVG(film.length) DESC
LIMIT 1;

#Display the top 10 most frequently rented movies in descending order.

SELECT film.title, COUNT(film.title) AS Rentals
FROM sakila.rental
JOIN sakila.inventory
USING (inventory_id)
JOIN sakila.film
ON sakila.film.film_id = sakila.inventory.film_id
GROUP BY film.title 
ORDER BY rentals DESC
LIMIT 10;

#Determine if "Academy Dinosaur" can be rented from Store 1.

SELECT film.title, store.store_id
FROM sakila.inventory
JOIN sakila.film
USING (film_id)
JOIN sakila.store
ON sakila.store.store_id = sakila.inventory.store_id
WHERE (film.title = "ACADEMY DINOSAUR") AND (store.store_id = "2");

#Provide a list of all distinct film titles, along with their availability status in the inventory. Include a column indicating whether each title is 'Available' or 'NOT available.' Note that there are 42 titles that are not in the inventory, and this information can be obtained using a CASE statement combined with IFNULL."












